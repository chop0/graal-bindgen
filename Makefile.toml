[env]
RUSTFLAGS = "-C linker=${GRAAL_HOME}/languages/llvm/native/bin/clang -C ar=${GRAAL_HOME}/languages/llvm/native/bin/ar -C link-args=-lgraalvm-llvm -Og --emit=llvm-bc"

[tasks.ensure_graal]
condition = {env_not_set = ["GRAAL_HOME"], fail_message = "Found GraalVM in ${GRAAL_HOME}."}
script = '''
echo Environment variable GRAAL_HOME is not set.  Set it to GraalVM\'s root directory. 
exit 1
'''

[tasks.ensure_llvm]
condition = {files_not_exist = ["${GRAAL_HOME}/languages/llvm/native"], fail_message = "Found LLVM toolchain in ${GRAAL_HOME}/languages/llvm/native."}
script = '''
echo LLVM toolchain was not found in ${GRAAL_HOME}/languages/llvm/native.  Try running "gu install llvm-toolchain".
exit 1
'''

[tasks.clean]
command = "cargo"
dependencies = ["clean_buildscript"]
args = ["clean", "-p", "graal-bindgen", "-p", "polyglot_macro"]

[tasks.clean_buildscript]
script = '''
find -name "*build_script_build*" -exec rm {} \;
'''

[tasks.build]
command = "cargo"
dependencies = ["ensure_graal", "ensure_llvm", "clean"]
args = ["build"]

[tasks.run]
dependencies = ["build"]
script = '''
${GRAAL_HOME}/languages/llvm/bin/lli --polyglot --lib $(rustc --print sysroot)/lib/libstd-* target/debug/deps/rustgraal-*.bc
'''

[tasks.test]
command = "cargo"
args = ["test"]
dependencies = ["clean"]
